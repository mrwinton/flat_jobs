---
http_interactions:
- request:
    method: get
    uri: https://githubinc.jibeapply.com/api/jobs?categories=Engineering&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.11
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 06 Dec 2023 18:41:01 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      X-Powered-By:
      - engine
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=7776000000; includeSubDomains; preload
      Content-Security-Policy:
      - 'default-src https: ''unsafe-inline'' ''unsafe-eval'' data: blob: mediastream:;'
      Set-Cookie:
      - jasession=s%3A84Otm4CxWYO_K9TIohl2cJlbX2of-tL2.JtzCirztXQ3Dn5JwIDmqloyoiiKilIyEtr%2BZzaOiHo4;
        Path=/; Expires=Thu, 07 Dec 2023 18:41:01 GMT; HttpOnly; Secure; SameSite=Lax
      - searchSource=external; Path=/; Expires=Fri, 05 Jan 2024 18:41:01 GMT; Secure;
        SameSite=Lax
      - session_id=500c7bf1-fdf3-44a1-9a04-8723c6276c22; Path=/; HttpOnly; Secure
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - '0'
      Etag:
      - W/"19102-zvzm5L0ua1a015z6p3N06K3jKE8"
      Vary:
      - Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 06 Dec 2023 18:41:01 GMT
recorded_with: VCR 6.2.0
