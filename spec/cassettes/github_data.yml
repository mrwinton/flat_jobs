---
http_interactions:
- request:
    method: get
    uri: https://githubinc.jibeapply.com/api/jobs?categories=Engineering&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 11 Dec 2023 21:03:58 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
      X-Powered-By:
      - engine
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=7776000000; includeSubDomains; preload
      Content-Security-Policy:
      - 'default-src https: ''unsafe-inline'' ''unsafe-eval'' data: blob: mediastream:;'
      Set-Cookie:
      - jasession=s%3ArR9bOW2T5GvYjFVgO3ABfQ0DYqJtIpvQ.UgV3KnxZ2GfXL9mDE06yOFjqRgulhUJCQ34CSE2d5g0;
        Path=/; Expires=Tue, 12 Dec 2023 21:03:58 GMT; HttpOnly; Secure; SameSite=Lax
      - searchSource=external; Path=/; Expires=Wed, 10 Jan 2024 21:03:58 GMT; Secure;
        SameSite=Lax
      - session_id=23855688-c1b5-47e4-a571-d2dc363a6e20; Path=/; HttpOnly; Secure
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - '0'
      Etag:
      - W/"1861d-PYm6wLZwHjLnk1du+htC1JS6XhY"
      Vary:
      - Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 11 Dec 2023 21:03:58 GMT
recorded_with: VCR 6.2.0
